name: Build and Publish Docker Images

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (will override git tag)'
        required: false
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Extract metadata
        id: meta
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Extract version
        id: version
        run: |
          if [[ "${{ github.event.inputs.version }}" != "" ]]; then
            echo "::set-output name=version::${{ github.event.inputs.version }}"
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"
          else
            echo "::set-output name=version::latest"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          file: ./src/backend/docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository }}/backend:${{ steps.version.outputs.version }}-${{ steps.meta.outputs.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/web
          file: ./src/web/src/docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository }}/frontend:${{ steps.version.outputs.version }}-${{ steps.meta.outputs.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push worker image
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          file: ./src/backend/docker/celery/worker-entrypoint.sh
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/worker:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository }}/worker:${{ steps.version.outputs.version }}-${{ steps.meta.outputs.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update deployment manifest
        if: github.ref_type == 'tag'
        run: |
          sed -i 's|image: ghcr.io/${{ github.repository }}/backend:.*|image: ghcr.io/${{ github.repository }}/backend:${{ steps.version.outputs.version }}|g' infrastructure/docker-compose.yml
          sed -i 's|image: ghcr.io/${{ github.repository }}/frontend:.*|image: ghcr.io/${{ github.repository }}/frontend:${{ steps.version.outputs.version }}|g' infrastructure/docker-compose.yml
          sed -i 's|image: ghcr.io/${{ github.repository }}/worker:.*|image: ghcr.io/${{ github.repository }}/worker:${{ steps.version.outputs.version }}|g' infrastructure/docker-compose.yml

      - name: Create Release
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: infrastructure/docker-compose.yml
          body: |
            ## Release ${{ steps.version.outputs.version }}

            Docker images:
            - ghcr.io/${{ github.repository }}/backend:${{ steps.version.outputs.version }}
            - ghcr.io/${{ github.repository }}/frontend:${{ steps.version.outputs.version }}
            - ghcr.io/${{ github.repository }}/worker:${{ steps.version.outputs.version }}

            Commit: ${{ github.sha }}