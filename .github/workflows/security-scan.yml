name: Security Scan

on:
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install safety
        run: pip install safety
      
      - name: Check Python dependencies
        run: safety check -r src/backend/requirements.txt --full-report
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Check JavaScript dependencies
        run: cd src/web && npm audit --json > npm-audit.json || true
      
      - name: Process npm audit results
        run: cd src/web && node -e "const audit = require('./npm-audit.json'); const highVulns = audit.vulnerabilities ? Object.values(audit.vulnerabilities).filter(v => v.severity === 'high' || v.severity === 'critical').length : 0; console.log('High/Critical vulnerabilities:', highVulns); process.exit(highVulns > 0 ? 1 : 0);"

  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'  # Get all history for proper secret detection
      
      - name: Install gitleaks
        run: wget https://github.com/zricethezav/gitleaks/releases/download/v8.16.3/gitleaks_8.16.3_linux_x64.tar.gz && tar -xzf gitleaks_8.16.3_linux_x64.tar.gz && chmod +x gitleaks && sudo mv gitleaks /usr/local/bin/
      
      - name: Run gitleaks
        run: gitleaks detect --source . --verbose --report-format json --report-path gitleaks-report.json
      
      - name: Check for secrets
        run: if [ -s gitleaks-report.json ]; then echo 'Secrets found in the repository!'; cat gitleaks-report.json; exit 1; else echo 'No secrets found.'; fi

  code-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python, javascript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  container-scan:
    runs-on: ubuntu-latest
    needs: [dependency-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build backend image for scanning
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          file: ./src/backend/docker/Dockerfile
          push: false
          load: true
          tags: backend:scan
      
      - name: Scan backend image
        uses: aquasecurity/trivy-action@0.11.0
        with:
          image-ref: backend:scan
          format: sarif
          output: trivy-backend-results.sarif
          severity: CRITICAL,HIGH
      
      - name: Build frontend image for scanning
        uses: docker/build-push-action@v4
        with:
          context: ./src/web
          file: ./src/web/src/docker/Dockerfile
          push: false
          load: true
          tags: frontend:scan
      
      - name: Scan frontend image
        uses: aquasecurity/trivy-action@0.11.0
        with:
          image-ref: frontend:scan
          format: sarif
          output: trivy-frontend-results.sarif
          severity: CRITICAL,HIGH
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-backend-results.sarif
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-frontend-results.sarif

  security-scan-summary:
    runs-on: ubuntu-latest
    needs: [dependency-scan, secret-scan, code-scan, container-scan]
    steps:
      - name: Security Scan Complete
        run: echo "All security scans completed successfully!"